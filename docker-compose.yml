version: '3'

services:
  
  db:
    
    restart: always
    image: postgres:9.6.22
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=postgres
        
  web:
    build: .
    #command: python3 manage.py runserver 0.0.0.0:8000
    command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate --noinput && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/App/
    #restart: always
    ports:
      - "8000:8000"
    depends_on:
      - db
      - elasticsearch

  broker:
    image: rabbitmq:3.8.19
    hostname: broker
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"

  worker1:
    build: .
    restart: "no"
    command: celery -A packagesAnalyzerProj  worker -l info  -E  
    volumes:
      - .:/App/
    depends_on:
      - broker

  frontend:
    container_name: frontend
    build:
      context: ./App/packagesAnalyzerProj/frontend
      dockerfile: DockerfileFrontEnd.Dockerfile
    volumes:
      #- '.:/frontend'
      # - './node_modules:/frontend/node_modules'
      - './App/packagesAnalyzerProj/frontend:/frontend'
      - './App/packagesAnalyzerProj/frontend/node_modules:/frontend/node_modules'
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - web
    command: ["npm", "start" ]
    stdin_open: true
      


  celery-beat:
    build: .
    command: bash -c " cd ../.. && cd packagesAnalyzerProj/ &&   celery -A packagesAnalyzerProj beat -l info "
    volumes:
      - ./App/
    depends_on:
      - broker

  flower:  
    image: mher/flower:0.9.7
    command: ["flower", "--broker=amqp://admin:mypass@broker", "--port=5555"]  
    ports:  
      - 5555:5555 
    depends_on:
      - broker

  # Elasticsearch Docker Images: https://www.docker.elastic.co/
  elasticsearch:
    #image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    build: 
      context: ./Dockerfiles
      dockerfile: DockerfileElasticSearch.Dockerfile
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

volumes:
  elasticsearch-data:
  
  
